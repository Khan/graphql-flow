name: Release

on:
  push:
    branches:
      - main

permissions:
  id-token: write # required for publishing to npm 
  contents: write # required to `git push`
  
# This workflow will run changesets depending on two different scenarios:
#
# 1. If we are landing a specific commit into main (Author PR), then
#    changesets will check if there are changes verifying the Markdown files
#    generated automatically:
#
#    a) There are new versions and there's NO Release PR, then the changesets
#    action will create a new Release PR.
#
#    b) There's a Release PR, then the changesets action will update the
#    existing Release PR with the new commit.
#
#    NOTE: (in both cases, changesets will modify the new version in
#    package.json for each package, and will remove the MD files as part of the
#    Release PR).
#
# 2. If we are landing the Release PR into main, then the changesets action
#    will publish the changes to npm.
#
# For more info about this workflow, see:
# https://github.com/changesets/action#usage
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Khan/actions@shared-node-cache-v2
        with:
          node-version: 20.x

      - name: ‚¨ÜÔ∏è Upgrade npm for OIDC support
        shell: bash
        run: |
          # npm trusted publishing requires npm CLI v11.5.1+
          # Node.js 22 ships with npm 10.x, so we need to upgrade
          npm install -g npm@latest
          echo "‚úÖ npm upgraded to $(npm --version)"

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm publish:ci
        env:
          # We use a Personal Access Token here rather than the GITHUB_TOKEN
          # so that it will trigger our other actions. The token has to be on
          # the account of someone with appropriate access levels and given the
          # repo scope.
          GITHUB_TOKEN: ${{ secrets.KHAN_ACTIONS_BOT_TOKEN }}
          # Note: we no longer use the NPM_TOKEN secret because we've enabled
          # Trusted Publishing (https://docs.npmjs.com/trusted-publishers) on
          # the npmjs.com side:
          # https://www.npmjs.com/package/@khanacademy/graphql-flow/access

      - name: Send a Slack notification for web if a publish happens
        if: steps.changesets.outputs.published == 'true'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_FEI_FIREHOSE }}
          SLACK_CHANNEL: fei-firehose
          SLACK_MSG_AUTHOR: ${{ github.event.pull_request.user.login }}
          SLACK_USERNAME: GithubGoose
          SLACK_ICON_EMOJI: ":goose:"
          SLACK_MESSAGE: "A new version of ${{ github.event.repository.name }} was published! üéâ \nRelease notes ‚Üí https://github.com/Khan/${{ github.event.repository.name }}/releases/"
          SLACK_TITLE: "New Graphql-Flow release!"
          SLACK_FOOTER: Graphql-Flow Slack Notification
          MSG_MINIMAL: true
