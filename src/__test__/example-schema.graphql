scalar PositiveNumber

enum Episode { NEW_HOPE, EMPIRE, JEDI }

"""
A movie character
"""
interface Character {
  id: String!
  name: String
  friends: [Character]
  appearsIn: [Episode]
}

"""
A human character
"""
type Human implements Character {
  id: String!
  """The person's name"""
  name: String
  friends: [Character]
  appearsIn: [Episode]
  homePlanet: String
  alive: Boolean
  hands: PositiveNumber
}

"""
A robot character
"""
type Droid implements Character {
  id: String!
  name: String
  friends: [Character]
  appearsIn: [Episode]
  """The robot's primary function"""
  primaryFunction: String!
}

type Animal {
  name: String
}

union Friendable = Human | Droid | Animal

type Query {
  hero(episode: Episode): Character
  human(id: String!): Human
  droid(id: String!): Droid
  friend(id: String!): Friendable
  candies(number: PositiveNumber!): String
}

"""A character to add"""
input CharacterInput {
  """The new character's name"""
  name: String!
  """The character's friends"""
  friends: [ID!]
  appearsIn: [Episode!]
  candies: PositiveNumber!
  friendly: Boolean! = true
  toBeRemoved: String @deprecated(reason: "Unused")
}

type Mutation {
  addCharacter(character: CharacterInput!): Character
}
